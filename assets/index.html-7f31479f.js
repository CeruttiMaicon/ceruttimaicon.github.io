import{_ as r,M as d,p as t,q as l,a1 as n,R as e,t as s,N as i}from"./framework-35a8e870.js";const u="/images/erro1.png",m="/images/erro2.png",p={},c={href:"https://laravel.com/docs/5.7/homestead",target:"_blank",rel:"noopener noreferrer"},v={href:"https://www.youtube.com/watch?v=-41Km1tAokI",target:"_blank",rel:"noopener noreferrer"},g={href:"https://www.virtualbox.org/wiki/Downloads",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.vagrantup.com/downloads.html",target:"_blank",rel:"noopener noreferrer"};function h(q,a){const o=d("ExternalLinkIcon");return t(),l("div",null,[a[10]||(a[10]=n('<h1 id="laravel-homestad" tabindex="-1"><a class="header-anchor" href="#laravel-homestad" aria-hidden="true">#</a> Laravel Homestad</h1><h2 id="introducao" tabindex="-1"><a class="header-anchor" href="#introducao" aria-hidden="true">#</a> Introdução</h2><p>O Laravel se esforça para tornar toda a experiência de desenvolvimento do PHP agradável, incluindo seu ambiente de desenvolvimento local. O Vagrant fornece uma maneira simples e elegante de gerenciar e provisionar máquinas virtuais.</p><p>O Laravel Homestead é uma caixa Vagrant oficial e pré-empacotada que fornece a você um maravilhoso ambiente de desenvolvimento sem precisar instalar o PHP, um servidor web e qualquer outro software de servidor em sua máquina local. Não mais se preocupar com bagunçar o seu sistema operacional! As caixas vagabundas são completamente descartáveis. Se algo der errado, você pode destruir e recriar a caixa em minutos!</p><p>Homestead é executado em qualquer sistema Windows, Mac ou Linux, e inclui o servidor web Nginx, PHP 7.3, PHP 7.2, PHP 7.1, PHP 7.0, PHP 5.6, MySQL, PostgreSQL, Redis, Memcached, Node e todos os outros produtos você precisa desenvolver incríveis aplicativos Laravel.</p><h2 id="instalacao" tabindex="-1"><a class="header-anchor" href="#instalacao" aria-hidden="true">#</a> Instalação</h2><p>Primeiramente a documentação oficial</p>',7)),e("p",null,[e("a",c,[a[0]||(a[0]=s("Laravel Homestead")),i(o)])]),e("p",null,[a[2]||(a[2]=s("Caso tenha dificuldades em acompanhar algum passo tenho um link de um vídeo no youtube onde o Fabio Vedovelli ")),e("a",v,[a[1]||(a[1]=s("Fabio Vedovelli")),i(o)]),a[3]||(a[3]=s(" explica."))]),a[11]||(a[11]=e("p",null,"Seguindo os passos dele eu montei parte deste tutorial, e esclareci muitas duvidas.",-1)),a[12]||(a[12]=e("p",null,"Aqui utilizarei o Virtual Box para fazer o gerenciamento das VM's e o Vagrant.",-1)),e("p",null,[a[5]||(a[5]=s("Baixe do site oficial o ")),e("a",g,[a[4]||(a[4]=s("Virtual Box")),i(o)]),a[6]||(a[6]=s("."))]),e("p",null,[a[8]||(a[8]=s("Instale-o normalmente. E em seguida instale o ")),e("a",b,[a[7]||(a[7]=s("Vagrant")),i(o)]),a[9]||(a[9]=s(". Baixe-os de acordo com o seu sistema operacional."))]),a[13]||(a[13]=n(`<p>Baixe os dois de um site oficial para não ter problemas de versão, o Laravel Homestead necessita da versão mais recente dos dois.</p><p>Em seguida: execute em seu terminal de comando o seguinte. Ele vai baixar todos os pacotes essenciais para se fazer o ambiente virtualizado do Laravel e por esse motivo vá tomar um café. Esse download demorou pra mim 3 horas e 30 min,. E é normal demorar, depende da velocidade da internet de cada um.</p><p>(Este passo só será feito uma unica vez, então não se preocupe em ter que fazer novamente para uma segunda maquina virtual caso futuramente necessite)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant box <span class="token function">add</span> laravel/homestead
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Ele vai pedir uma distro de virtualização lembre-se de escolher o Virtual Box.</p><p>Agora você pode instalar o Homestead clonando o repositório. Considere clonar o repositório em uma pasta dentro de seu diretório &quot;home&quot;, pois a caixa Homestead servirá como host para todos os seus projetos do Laravel. Aqui ficará a sua maquina virtual. Entre no seu diretório home e execute o seguinte comando:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/laravel/homestead.git ~/Homestead
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Este não ira demorar muito.</p><p>Entre na pasta Homestead que você acabou de baixar. Certifiquei-se de estar em uma versão funcional (no meu caso git checkout v7.18.0 funcionou)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout v7.18.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Execute o comando a seguir para criar o arquivo de configuração (Lembre-se de estar dentro do projeto que acabamos de baixar). O arquivo de configuração será colocado no diretório Homestead, e ele se chama &quot;Homestead.yaml&quot;. (Execute de acordo com o seu sistema operacional).</p><p>(Se a sua opção for Windows não esqueça de executar o comando como Administrador)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// Mac / Linux<span class="token punctuation">..</span>.

<span class="token function">bash</span> init.sh

// Windows<span class="token punctuation">..</span>.

init.bat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Agora vamos configurar o arquivo Homestead.yaml. (utilize o VS Code). Dentro dele haverá as seguintes informações:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>folders: - map: ~/Code
    to: /home/vagrant/Code
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><em>(para configurações adicionais consulte a documentação oficial)</em></p><p>Preste muita atenção. Esses serão as pastas compartilhadas com o computador local e a maquina virtual. A parte&quot; -map: &quot; indica a pasta cuja a qual será colocado os projetos Laravel para o acesso local, da sua maquina física, o &quot;to&quot; indica a pasta onde apareceram os arquivos dentro da maquina virtual. Elas funcionam de uma forma espelhada, os arquivos que são editados dentro da maquina local alteram a virtual.</p><p><em>(&quot;~&quot; isto indica a pasta home do usuário)</em></p><p>Agora a parte de configuração das rotas de acesso local.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sites:
- map: homestead.test
    to: /home/vagrant/code/Laravel/public
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Este &quot;map&quot; vai ser o domínio a ser criado para ser acessado da maquina fisica para testar os projetos.</p><p>O &quot;to&quot; indicara o local do projeto a ser exibido (não esqueça que o index do Laravel é na pasta public como no exemplo acima).</p><p>Você também pode configurar para aparecer mais de um projeto, eu por exemplo adicionei a pasta Code uma instalação do phpMyAdmin para ter acesso ao banco de dados da maquina virtual. E ficou da seguinte maneira</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sites:
- map: gps.developper
    to: /home/vagrant/Code/gps_laravel/public

- map: gps.phpmyadmin
    to: /home/vagrant/Code/phpMyAdmin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Nas linhas superiores do arquivo você indica o número de CPU&#39;s, qunatidade de memoria a ser utilizada na maquina virtual e o provider utilizado para rodar a VM do Laravel Homestade, pode deixar estes que estão padrão mesmo.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ip: <span class="token string">&quot;192.168.10.10&quot;</span>
memory: <span class="token number">2048</span>
cpus: <span class="token number">1</span>
provider: virtualbox
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="arquivo-de-hosts" tabindex="-1"><a class="header-anchor" href="#arquivo-de-hosts" aria-hidden="true">#</a> Arquivo de Hosts</h2><p>O arquivo de hosts.</p><p>Você deve adicionar os &quot;domínios&quot; para seus sites Nginx ao arquivo de hosts em sua máquina. O arquivo hosts redirecionará as solicitações de seus sites da Homestead para sua máquina Homestead. No Mac e no Linux, esse arquivo está localizado em / etc / hosts. No Windows, ele está localizado em C: \\ Windows \\ System32 \\ drivers \\ etc \\ hosts. As linhas adicionadas a este arquivo serão semelhantes às seguintes:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">192.168</span>.10.10 homestead.test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>O primeiro endereço IP é o da maquina virtual que foi configurado no arquivo Homestead.yaml. E o nome é o mesmo que você definil no arquivo como &quot; site: map: &quot;.</p><h2 id="iniciando-maquina-virtual-comando-vagrant" tabindex="-1"><a class="header-anchor" href="#iniciando-maquina-virtual-comando-vagrant" aria-hidden="true">#</a> Iniciando maquina virtual (Comando VAGRANT)</h2><p>Agora entre na pasta do Homestead que foi baixada e de o seguinte código do vagrant para iniciar a maquina virtual do virtual box.</p><p>Para iniciar (a maquina virtual deve estar ligada para que a URL desejada funcione)</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Caso seja feita novas alterações no arquivo Homestead.yaml. a maquina virtual deverá ser reiniciada para colocar em vigor as alterações. E isso pode ser feito com comando a seguir</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant reload <span class="token parameter variable">--provision</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Para desligar a maquina virtual e finalizar todos os processos nela.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant <span class="token function">halt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A principio deve ser uma configuração bem simples. Não esqueça de criar as pastas no Local Físico caso elas não tenham sido criadas ainda. E crie um index.php para fazer um teste, com o seguinte código.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span> <span class="token function">phpinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Talvez o seguinte erro apareça.</p><img src="`+u+'"><p>Selecione Avançado, e em seguida.</p><img src="'+m+'"><p>É apenas um erro de certificação, que seu site local não possui, isto é perfeitamente normal, e por horas ficara assim.</p>',46))])}const x=r(p,[["render",h],["__file","index.html.vue"]]);export{x as default};
