import{_ as a,p as n,q as e,a1 as t}from"./framework-35a8e870.js";const p={};function o(i,s){return n(),e("div",null,s[0]||(s[0]=[t(`<h1 id="uploud-de-imagem" tabindex="-1"><a class="header-anchor" href="#uploud-de-imagem" aria-hidden="true">#</a> Uploud de imagem</h1><p>Dentro do nosso projeto foi definido que toda imagem deverá ser armazenada em um servidor da Amazon utilizando da tecnologia S3 da Amazon.</p><p>Primeiramente execute o comando abaixo no seu terminal de comando (para instalar as dependências do S3):</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">composer</span> require league/flysystem-aws-s3-v3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Depois disso entre no seu arquivo .env e edite as seguintes informações (essas informações são de seus arquivos do balde do S3 da Amazon, você consegue esssas informações todas no site da Amazon):</p><p><strong>.env</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">S3_KEY</span><span class="token operator">=</span>AKIAIFQAKTMJRWXKVXRA
<span class="token assign-left variable">S3_SECRET</span><span class="token operator">=</span>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
<span class="token assign-left variable">S3_REGION</span><span class="token operator">=</span>sa-east-1
<span class="token assign-left variable">S3_BUCKET</span><span class="token operator">=</span>gps-bucket
<span class="token assign-left variable">AWS_URL</span><span class="token operator">=</span>https://s3-sa-east-1.amazonaws.com/gps-bucket/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Edite o arquivo do filesystem.php:</p><p><strong>config/filesystem.php</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>disks <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>
    <span class="token punctuation">..</span>.
    <span class="token string">&#39;s3&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">[</span>
        <span class="token string">&#39;driver&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;s3&#39;</span>,
        <span class="token string">&#39;key&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> env<span class="token punctuation">(</span><span class="token string">&#39;S3_KEY&#39;</span><span class="token punctuation">)</span>,
        <span class="token string">&#39;secret&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> env<span class="token punctuation">(</span><span class="token string">&#39;S3_SECRET&#39;</span><span class="token punctuation">)</span>,
        <span class="token string">&#39;region&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> env<span class="token punctuation">(</span><span class="token string">&#39;S3_REGION&#39;</span><span class="token punctuation">)</span>,
        <span class="token string">&#39;bucket&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> env<span class="token punctuation">(</span><span class="token string">&#39;S3_BUCKET&#39;</span><span class="token punctuation">)</span>,
        <span class="token string">&#39;url&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> env<span class="token punctuation">(</span><span class="token string">&#39;AWS_URL&#39;</span><span class="token punctuation">)</span>,
    <span class="token punctuation">]</span>,
    <span class="token punctuation">..</span>.
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><em>Desta parte em diante pode ser usado para fazer o uploud de onde quiser</em></p><p>Agora execute o seguinte comando no seu terminal:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan make:model ImagesExemplo <span class="token parameter variable">-m</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Você acabou de criar uma Migration e uma Model.</p><p>OBS: (Por padrão eu decidi colocar o nome &quot;Images&quot; na frente para que o segundo nome seja associado ao tipo da imagem que você irá guardar, exemplo: ImagesUsers, ImagensStaffs, ImagesEPS)</p><p>Uma model com o nome de ImegesExemplo foi criada. E uma migration com o nome 2018_04_19_153941_create_images_exemplo_table.php</p><p>Abra seu arquivo da migration: e adicione o seguinte código dentro da função &quot;up&quot;</p><p><strong>database/migrations/2018_04_19_153941_create_images_exemplo_table.php</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>    Schema::create<span class="token punctuation">(</span><span class="token string">&#39;images_users&#39;</span>, <span class="token keyword">function</span> <span class="token punctuation">(</span>Blueprint <span class="token variable">$table</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>increments<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>unsignedInteger<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>unsigned<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>string<span class="token punctuation">(</span><span class="token string">&#39;mime_type&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>string<span class="token punctuation">(</span><span class="token string">&#39;file_size&#39;</span>, <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>string<span class="token punctuation">(</span><span class="token string">&#39;file_name&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>comment<span class="token punctuation">(</span><span class="token string">&quot;Nome do arquivo Higienizado&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>string<span class="token punctuation">(</span><span class="token string">&#39;file_original_name&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>comment<span class="token punctuation">(</span><span class="token string">&quot;O nome original do arquivo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>string<span class="token punctuation">(</span><span class="token string">&#39;file_path&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>comment<span class="token punctuation">(</span><span class="token string">&quot;A URL real em que o arquivo está armazenado&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>string<span class="token punctuation">(</span><span class="token string">&#39;type&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>comment<span class="token punctuation">(</span><span class="token string">&quot;Onde o arquivo está armazenado. S3 / Local&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>boolean<span class="token punctuation">(</span><span class="token string">&#39;deleted&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>default<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>comment<span class="token punctuation">(</span><span class="token string">&quot;Se o arquivo for excluido, estara status 0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>foreign<span class="token punctuation">(</span><span class="token string">&#39;user_id&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>references<span class="token punctuation">(</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>on<span class="token punctuation">(</span><span class="token string">&#39;users&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token variable">$table</span>-<span class="token operator">&gt;</span>timestamps<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>A variável de FOREIGN que foi criada deve ser renomeada de acordo com o que você precisa associar. Exemplo: &quot;user_id&quot;, para você depois conseguir fazer a ligação que determinado usuário é o dono de determinada imagem. Essa tabela que você está criando irá guardar as informações da imagem, como ID do dono da imagem (user_id), formato do arquivo (mime_type), nome da imagem (file_name), a URL em que você adicionou o arquivo no S3 (file_path), onde o arquivo está armazenado(type)(isto serviria caso nós precisássemos trabalhar com mais de um banco de dados diferente do S3).</p><p>Dentro do arquivo do model você deve referenciar as variáveis que serão validas para que se possa trabalhar com elas nos formulários.</p><p><strong>App/Exemplo.php</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span>
    protected <span class="token variable">$fillable</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;file_name&#39;</span>, <span class="token string">&#39;mime_type&#39;</span>, <span class="token string">&#39;file_size&#39;</span>, <span class="token string">&#39;file_original_name&#39;</span>, <span class="token string">&#39;file_path&#39;</span>, <span class="token string">&#39;status&#39;</span>, <span class="token string">&#39;type&#39;</span>, <span class="token string">&#39;user_id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Agora nos Controllers onde você pretende fazer uploud de imagem você deve inserir as seguintes linhas de código dentro da função do STORE.</p><p><strong>app/Http/Controllers/UsersController.php</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use Illuminate<span class="token punctuation">\\</span>Support<span class="token punctuation">\\</span>Facades<span class="token punctuation">\\</span>Storage<span class="token punctuation">;</span>

//Altera o nome da imagem
<span class="token variable">$imageName</span> <span class="token operator">=</span>  <span class="token variable">$user</span>-<span class="token operator">&gt;</span>customer_id <span class="token builtin class-name">.</span> <span class="token string">&#39;-&#39;</span> <span class="token builtin class-name">.</span> time<span class="token punctuation">(</span><span class="token punctuation">)</span>.<span class="token string">&#39;.&#39;</span><span class="token builtin class-name">.</span><span class="token variable">$request</span>-<span class="token operator">&gt;</span>image-<span class="token operator">&gt;</span>getClientOriginalExtension<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

//Para guardar o nome correto da imagem
<span class="token variable">$nameImage</span> <span class="token operator">=</span> <span class="token variable">$imageName</span><span class="token punctuation">;</span>

//variavel com as insformações da imagem
<span class="token variable">$image</span> <span class="token operator">=</span> <span class="token variable">$request</span>-<span class="token operator">&gt;</span>file<span class="token punctuation">(</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

//manda a imagem para o bucket no S3 - da um retorno TRUE
<span class="token variable">$t</span> <span class="token operator">=</span> Storage::disk<span class="token punctuation">(</span><span class="token string">&#39;s3&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>put<span class="token punctuation">(</span><span class="token variable">$imageName</span>, file_get_contents<span class="token punctuation">(</span><span class="token variable">$image</span><span class="token punctuation">)</span>, <span class="token string">&#39;public&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

//grava a URL da Imagem no bucket S3
<span class="token variable">$imageName</span> <span class="token operator">=</span> Storage::disk<span class="token punctuation">(</span><span class="token string">&#39;s3&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>url<span class="token punctuation">(</span><span class="token variable">$imageName</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$s3</span> <span class="token operator">=</span> Storage::disk<span class="token punctuation">(</span><span class="token string">&#39;s3&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$mimetype</span> <span class="token operator">=</span> <span class="token variable">$request</span>-<span class="token operator">&gt;</span>file<span class="token punctuation">(</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getClientMimeType<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$fileSize</span> <span class="token operator">=</span> <span class="token variable">$request</span>-<span class="token operator">&gt;</span>file<span class="token punctuation">(</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">)</span>-<span class="token operator">&gt;</span>getClientSize<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

//Faz o insert no banco de dados com as informações da imagem <span class="token keyword">do</span> usuarios
<span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token variable">$s3</span>-<span class="token operator">&gt;</span>put<span class="token punctuation">(</span><span class="token variable">$imageName</span>, file_get_contents<span class="token punctuation">(</span><span class="token variable">$request</span>-<span class="token operator">&gt;</span>file<span class="token punctuation">(</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">))</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token variable">$file</span> <span class="token operator">=</span> Images_EPS_AWS::create<span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string">&#39;eps_aws_id&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$eps_aws</span>-<span class="token operator">&gt;</span>id,
        <span class="token string">&#39;file_name&#39;</span>  <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$nameImage</span>,
        <span class="token string">&#39;mime_type&#39;</span>  <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$mimetype</span>,
        <span class="token string">&#39;file_size&#39;</span>  <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$fileSize</span>,
        <span class="token string">&#39;file_path&#39;</span>  <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">$imageName</span>,
        <span class="token string">&#39;type&#39;</span>       <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;s3&#39;</span>,

    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$fileImg</span> <span class="token operator">=</span> Images_EPS_AWS::find<span class="token punctuation">(</span><span class="token variable">$file</span>-<span class="token operator">&gt;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$fileImg</span>-<span class="token operator">&gt;</span>status <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token variable">$fileImg</span>-<span class="token operator">&gt;</span>save<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Aqui na validação da REQUEST você deve passar a variável &#39;image&#39; (pois ela terá este nome no FORM).</p><p>OBS: Repare que no campo onde tem a &#39;mimes&#39; você está definindo quais os formatos de arquivo que o seu sistema estará enviado para o seu bucket no S3. E se o usuário mandar outro formato o sistema não permite mandar para o S3 e no formulário ele aparecerá como se todos os campos não fossem preenchidos (caso você use o swith alert 2).</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//AQUI VOCE DEFINE OS FORMATOS POSSIVEIS DOS ARQUIVOS

<span class="token variable">$this</span>-<span class="token operator">&gt;</span>validate<span class="token punctuation">(</span><span class="token variable">$request</span>, <span class="token punctuation">[</span>
    <span class="token string">&#39;image&#39;</span>         <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;required|image|mimes:jpeg,png,jpg,gif,svg,txt|max:2048&#39;</span>,
    <span class="token string">&#39;name&#39;</span>          <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;required&#39;</span>,
    <span class="token string">&#39;outros_campos&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;required&#39;</span>,
    <span class="token punctuation">..</span>.
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>PRESTE MUITA ATENÇÃO NESTA PARTE</strong></p><p>Dentro do IF no lugar onde a variável &quot;$file&quot; foi criada =&gt;</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code> <span class="token variable">$fileImg</span> <span class="token operator">=</span> ImagesExemplo::find<span class="token punctuation">(</span><span class="token variable">$file</span>-<span class="token operator">&gt;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Você deve modificar o &quot;ImagesExemplo&quot; pelo nome da sua Model (ImagesUsers) que irá mandar os dados para o banco de dados. Por exemplo</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$fileImg</span> <span class="token operator">=</span> ImagesUsers::find<span class="token punctuation">(</span><span class="token variable">$file</span>-<span class="token operator">&gt;</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Por ultimo mas não menos importante, nos seus formularios onde você for requisitar a vinda das imagens utilizem o metodo POST e tenha a TAG do FORM da seguinte maneira:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">{</span><span class="token punctuation">{</span> Form::open<span class="token punctuation">(</span>array<span class="token punctuation">(</span><span class="token string">&#39;route&#39;</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token string">&#39;exemplo.store&#39;</span>,<span class="token string">&#39;method&#39;</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token string">&#39;POST&#39;</span>, <span class="token string">&#39;files&#39;</span><span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token boolean">true</span><span class="token punctuation">))</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A TAG &quot; &#39;files&#39; =&gt; true &quot; dentro do &quot;array&quot; é o que faz o seu form enviar a imagem, então não esqueça de adicioná-lo no seu FORM do BLADE.</p><p>No blade de formulario você deve ter algo parecido com:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&lt;</span>div <span class="token assign-left variable">class</span><span class="token operator">=</span><span class="token string">&quot;form-group&quot;</span><span class="token operator">&gt;</span>
  <span class="token punctuation">{</span><span class="token punctuation">{</span> Form::label<span class="token punctuation">(</span><span class="token string">&#39;image&#39;</span>, trans<span class="token punctuation">(</span><span class="token string">&#39;labels.image&#39;</span><span class="token punctuation">))</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">(</span>*<span class="token punctuation">)</span>:
  <span class="token punctuation">{</span><span class="token punctuation">{</span> Form::file<span class="token punctuation">(</span><span class="token string">&#39;image&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>
<span class="token operator">&lt;</span>/div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Esse &quot;Form::file&quot; identifica o form para envio de arquivos com o padrão do BLADE. E &#39;image&#39; é o nome pelo qual está se passando o id da variável.</p>`,40)]))}const c=a(p,[["render",o],["__file","index.html.vue"]]);export{c as default};
