import{_ as t,M as i,p as r,q as u,R as n,t as o,N as s,a1 as l}from"./framework-35a8e870.js";const p={},d={href:"https://git-scm.com/book/pt-br/v2/Git-Flow-Basico",target:"_blank",rel:"noopener noreferrer"},m={href:"https://pages.github.com/",target:"_blank",rel:"noopener noreferrer"},c={href:"https://v2.vuepress.vuejs.org/guide/deployment.html#github-pages",target:"_blank",rel:"noopener noreferrer"},b={href:"https://pages.github.com/",target:"_blank",rel:"noopener noreferrer"};function v(g,e){const a=i("ExternalLinkIcon");return r(),u("div",null,[e[14]||(e[14]=n("h1",{id:"criacao-de-ambiente",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#criacao-de-ambiente","aria-hidden":"true"},"#"),o(" Cria√ß√£o de Ambiente")],-1)),e[15]||(e[15]=n("h2",{id:"git-flow",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#git-flow","aria-hidden":"true"},"#"),o(" Git Flow")],-1)),n("p",null,[e[1]||(e[1]=o("Inicialmente, o ")),n("a",d,[e[0]||(e[0]=o("Git Flow")),s(a)]),e[2]||(e[2]=o(" foi utilizado para organizar o projeto."))]),e[16]||(e[16]=n("p",null,"Ao fazer o clone do projeto, o Git Flow foi instalado.",-1)),n("p",null,[e[4]||(e[4]=o("Tudo o que for publicado na branch ")),e[5]||(e[5]=n("code",null,"main",-1)),e[6]||(e[6]=o(" ser√° automaticamente feito deploy no ")),n("a",m,[e[3]||(e[3]=o("Github Pages")),s(a)]),e[7]||(e[7]=o("."))]),e[17]||(e[17]=n("h2",{id:"github-actions",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#github-actions","aria-hidden":"true"},"#"),o(" GitHub Actions")],-1)),n("p",null,[e[9]||(e[9]=o("Conseguimos consultar a documenta√ß√£o oficial do vuepress para configurar o ")),n("a",c,[e[8]||(e[8]=o("GitHub Actions")),s(a)]),e[10]||(e[10]=o("."))]),n("p",null,[e[12]||(e[12]=o("√â com base nessas instru√ß√µes que o vuepress foi configurado para o deploy no ")),n("a",b,[e[11]||(e[11]=o("Github Pages")),s(a)]),e[13]||(e[13]=o("."))]),e[18]||(e[18]=l(`<p>Na minha implementa√ß√£o, como eu utilizo um dominio personalizado (que √© muito comum), √© necess√°rio criar o arquivo <code>CNAME</code> na raiz do projeto.</p><p>Para isso eu utilizo da seguinte implementa√ß√£o:</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token punctuation">...</span>
<span class="token comment"># run build script</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Build VuePress site
<span class="token key atrule">run</span><span class="token punctuation">:</span> yarn docs<span class="token punctuation">:</span>build

<span class="token comment"># run build script create file CNAME</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Create file CNAME
<span class="token key atrule">run</span><span class="token punctuation">:</span> echo &#39;ceruttimaicon.js.org&#39; <span class="token punctuation">&gt;</span> docs/.vuepress/dist/CNAME
<span class="token punctuation">...</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>√â importante que o arquivo <code>CNAME</code> esteja na raiz do projeto e que seja executado apenas ap√≥s o comando <code>yarn docs:build</code>, dentro do diret√≥rio <code>docs/.vuepress/dist</code>, que far√° com que o arquivo apare√ßa na branch <code>gh-pages</code>.</p></div><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>Caso seu projeto n√£o tenha esta implementa√ß√£o a cada deploy na branch <code>gh-pages</code> ser√° necess√°rio criar o arquivo manualmente ou o configura-lo manualmente no GitHub.</p></div><p>Acredito que esta anota√ß√£o poupar√° muito tempo no futuro.</p><p>üòÉ</p>`,7))])}const k=t(p,[["render",v],["__file","index.html.vue"]]);export{k as default};
