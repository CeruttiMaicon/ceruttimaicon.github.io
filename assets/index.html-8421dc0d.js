import{_ as r,M as i,p as l,q as d,a1 as t,R as n,t as s,N as a}from"./framework-35a8e870.js";const p={},u={href:"https://www.docker.com/get-started",target:"_blank",rel:"noopener noreferrer"},c={href:"https://git-scm.com/downloads",target:"_blank",rel:"noopener noreferrer"},m={start:"2"},v={href:"https://github.com/CeruttiMaicon/SonarQube-7.5-Community-Docker-Implementation",target:"_blank",rel:"noopener noreferrer"},b={href:"http://localhost:9000",target:"_blank",rel:"noopener noreferrer"},k={href:"http://localhost:9000/account/security",target:"_blank",rel:"noopener noreferrer"},g={href:"http://localhost:9000/projects",target:"_blank",rel:"noopener noreferrer"};function h(x,e){const o=i("ExternalLinkIcon");return l(),d("div",null,[e[16]||(e[16]=t('<h1 id="sonarqube-utilizacao-rapida" tabindex="-1"><a class="header-anchor" href="#sonarqube-utilizacao-rapida" aria-hidden="true">#</a> Sonarqube - Utilização Rápida</h1><h2 id="instalacao-projeto" tabindex="-1"><a class="header-anchor" href="#instalacao-projeto" aria-hidden="true">#</a> Instalação projeto</h2><h3 id="requerimentos-tecnicos" tabindex="-1"><a class="header-anchor" href="#requerimentos-tecnicos" aria-hidden="true">#</a> Requerimentos técnicos</h3>',3)),n("p",null,[e[1]||(e[1]=s("Docker - ")),n("a",u,[e[0]||(e[0]=s("https://www.docker.com/get-started")),a(o)])]),n("p",null,[e[3]||(e[3]=s("Git - ")),n("a",c,[e[2]||(e[2]=s("https://git-scm.com/downloads")),a(o)])]),e[17]||(e[17]=t(`<h2 id="passos-rapidos" tabindex="-1"><a class="header-anchor" href="#passos-rapidos" aria-hidden="true">#</a> Passos rápidos</h2><ol><li>Rode este comando para baixar e executar o Sonarqube 7.5 Community.</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker run -d --name sonarqube -p 9000:9000 sonarqube:7.5-community
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3)),n("ol",m,[n("li",null,[n("p",null,[e[5]||(e[5]=s("Baixe o projeto para scanner de código: ")),n("a",v,[e[4]||(e[4]=s("SonarQube-7.5-Community-Docker-Implementation")),a(o)])])]),e[12]||(e[12]=n("li",null,[n("p",null,"Dentro deste projeto na pasta raiz baixe os projetos que deseja fazer a analise de código.")],-1)),n("li",null,[n("p",null,[e[7]||(e[7]=s("Aguarde o servidor iniciar e efetue login no servidor SonarQube em ")),n("a",b,[e[6]||(e[6]=s("http://localhost:9000")),a(o)]),e[8]||(e[8]=s(" Utilize credenciais padrão: login: admin password:admin"))])]),n("li",null,[n("p",null,[e[10]||(e[10]=s("Acesse: ")),n("a",k,[e[9]||(e[9]=s("http://localhost:9000/account/security")),a(o)]),e[11]||(e[11]=s(" e gere um token."))])])]),e[18]||(e[18]=t(`<blockquote><p>Copie o valor do token e salve-o em algum lugar, pois você não poderá vê-lo novamente! Você precisará mais tarde neste tutorial.</p></blockquote><p>Ainda dentro da pasta que acabamos de criar executaremos o seguinte comando:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker build --network=host --tag sonar-scanner-image:latest --build-arg SONAR_HOST=&quot;http://localhost:9000&quot; --build-arg SONAR_LOGIN_TOKEN=&quot;TOKEN_VALUE&quot; .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Lembre-se de substituir &quot;TOKEN_VALUE&quot; pelo seu token criado na etapa 4.</p><p>Pronto!</p><ol start="6"><li>Para cada projeto entre no diretório raiz e adicione estes dois arquivos:</li></ol><blockquote><p>OBS: (caso os arquivos já existam os substitua).</p></blockquote><blockquote><p>SONAR_PROJECT_KEY = Nome do projeto Scanneado</p></blockquote><p><strong>SonarQube-7.5-Community-Docker-Implementation/project-name/Dockerfile</strong></p><div class="language-docker line-numbers-mode" data-ext="docker"><pre class="language-docker"><code><span class="token comment"># It is our freshly build sonar-scanner-image from previous steps that</span>
<span class="token comment"># is used here as a base image in docker file that we will be working on</span>
<span class="token instruction"><span class="token keyword">FROM</span> sonar-scanner-image:latest <span class="token keyword">AS</span> sonarqube_scan</span>
<span class="token comment"># Here we are setting up a working directory to /app. It is like using \`cd app\` command</span>
<span class="token instruction"><span class="token keyword">WORKDIR</span> /app</span>
<span class="token comment"># Copying all files from the project directory to our current location (/app) in image</span>
<span class="token comment"># except patterns mention in .dockerignore</span>
<span class="token instruction"><span class="token keyword">COPY</span> . .</span>
<span class="token comment"># Execution of example command. Here it is used to show a list of files and directories.</span>
<span class="token comment"># It will be useful in later exercises in this tutorial.</span>
<span class="token instruction"><span class="token keyword">RUN</span> ls -list</span>
<span class="token comment"># To execute sonar-scanner we just need to run &quot;sonar-scanner&quot; in the image.</span>
<span class="token comment"># To pass Sonarqube parameter we need to add &quot;-D&quot;prefix to each as in the example below</span>
<span class="token comment"># sonar.host.url is property used to define URL of Sonarqube server</span>
<span class="token comment"># sonar.projectKey is used to define project key that will be used to distinguish it in</span>
<span class="token comment"># sonarqube server from other projects</span>
<span class="token comment"># sonar.sources directory for sources of project</span>
<span class="token instruction"><span class="token keyword">RUN</span> sonar-scanner <span class="token operator">\\</span>
    -Dsonar.host.url=<span class="token string">&quot;http://localhost:9000&quot;</span> <span class="token operator">\\</span>
    -Dsonar.projectKey=<span class="token string">&quot;SONAR_PROJECT_KEY&quot;</span> <span class="token operator">\\</span>
    -Dsonar.sources=. <span class="token operator">\\</span>

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>SonarQube-7.5-Community-Docker-Implementation/project-name/.dockerignore</strong></p><blockquote><p>Adicione mais diretórios que deseje que o scanner ignore.</p></blockquote><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.dockerignore
.vs
node_modules
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>Agora, ainda dentro do diretório do projeto execute:</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>docker build --network=host --no-cache .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,15)),n("p",null,[e[14]||(e[14]=s("Após o termino do scanner. Ao entrar em ")),n("a",g,[e[13]||(e[13]=s("http://localhost:9000/projects")),a(o)]),e[15]||(e[15]=s(" você verá o seu projeto."))])])}const q=r(p,[["render",h],["__file","index.html.vue"]]);export{q as default};
