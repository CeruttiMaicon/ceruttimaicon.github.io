import{_ as t,M as p,p as r,q as l,a1 as i,R as n,t as s,N as e}from"./framework-35a8e870.js";const c={},u={href:"https://www.cloudways.com/blog/author/shahroze-nawaz/",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.cloudways.com/blog/vue-validation-laravel/",target:"_blank",rel:"noopener noreferrer"};function k(v,a){const o=p("ExternalLinkIcon");return r(),l("div",null,[a[6]||(a[6]=i(`<h1 id="vue-validation-for-laravel" tabindex="-1"><a class="header-anchor" href="#vue-validation-for-laravel" aria-hidden="true">#</a> Vue Validation for Laravel</h1><h2 id="master-vue-validation-no-laravel-e-lidar-com-pedidos-de-formularios-efetivamente" tabindex="-1"><a class="header-anchor" href="#master-vue-validation-no-laravel-e-lidar-com-pedidos-de-formularios-efetivamente" aria-hidden="true">#</a> Master Vue Validation no Laravel e Lidar com Pedidos de Formulários Efetivamente</h2><p>O Laravel é um framework PHP avançado construído perfeitamente para web artisans. Ajuda a criar APIs robustas e aplicativos da Web otimizados. Além disso, a estrutura é muito amigável para o desenvolvedor, pois fornece recursos diferentes para facilitar várias operações funcionais.</p><p>A manipulação da validação de solicitações é uma das partes mais importantes de qualquer aplicativo da web. Muitos de nós sabemos que existem várias maneiras de validar a solicitação no Laravel, na qual uma é muito popular com a validação do Vue.</p><p>Por outro lado, o VueJS está se tornando cada vez mais popular entre a comunidade de front-end, não por causa de suas impressionantes funcionalidades, mas também por seu apoio oficial ao Laravel.</p><p>Ao criar um aplicativo da Web interativo, uma coisa mais importante para os desenvolvedores cuidarem é a validação do formulário. Você pode aplicar a validação de formulário por conta própria ou usar alguns plug-ins para fazer o trabalho.</p><p>Portanto, neste tutorial, demonstrarei como validar dados no Laravel usando a validação do Vue.</p><h2 id="pre-requisitos" tabindex="-1"><a class="header-anchor" href="#pre-requisitos" aria-hidden="true">#</a> Pré-requisitos</h2><p>Para o propósito deste tutorial de validação de formulário do VueJS, suponho que você tenha um aplicativo Laravel instalado em um servidor da web. Minha configuração é:</p><ul><li>Laravel 5.5</li><li>PHP 7.x</li><li>MySQL</li><li>Npm</li></ul><p>Para uma pilha de desenvolvedores otimizada, instalei meu aplicativo Laravel em um servidor gerenciado do Cloudways que é considerado uma plataforma perfeita para hospedar o projeto Laravel . Você também pode se inscrever para uma conta gratuita do Cloudways e configurar seu aplicativo em poucos minutos.</p><h2 id="instalar-npm" tabindex="-1"><a class="header-anchor" href="#instalar-npm" aria-hidden="true">#</a> Instalar Npm</h2><p>Começando com a validação do Vue no Laravel, a primeira etapa é a instalação do Node.js com o NPM .</p><p>Portanto, instale o NPM primeiro e vá para a pasta do projeto e cole o seguinte comando no terminal SSH.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init
<span class="token function">npm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="as-rotas" tabindex="-1"><a class="header-anchor" href="#as-rotas" aria-hidden="true">#</a> As rotas</h2><p>Agora, o próximo passo é criar rotas no controlador do Vue para páginas de validação, como índice, função de armazenamento e outras.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;vuevalidation/form&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;VueController@index&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name static-context">Route</span><span class="token operator">::</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;vuevalidation/form&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;VueController@store&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="o-controlador" tabindex="-1"><a class="header-anchor" href="#o-controlador" aria-hidden="true">#</a> O controlador</h2><p>Para criar um VueController que lide com várias operações lógicas, basta copiar e colar o comando abaixo:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>php artisan make:controller VueController
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="store" tabindex="-1"><a class="header-anchor" href="#store" aria-hidden="true">#</a> Store</h2><p>Depois de criar o controlador com êxito, abra-o e cole o seguinte código sob a função de armazenamento.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token variable">$request</span><span class="token operator">-&gt;</span><span class="token function">validate</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;obrigatório&#39;</span> <span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;comentários&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;obrigatório&#39;</span>
    <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token keyword">return</span> <span class="token function">response</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">json</span> <span class="token punctuation">(</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;success&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Feito!&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="index" tabindex="-1"><a class="header-anchor" href="#index" aria-hidden="true">#</a> Index</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token keyword">return</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;vuevalidation-form&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="vue-validation-view" tabindex="-1"><a class="header-anchor" href="#vue-validation-view" aria-hidden="true">#</a> Vue Validation View</h2><p>Depois de configurar a função do controlador com sucesso, agora é hora de criar arquivos de visualização dentro da pasta resources / views /. Dê um nome a ele como vuevalidation-form.blade.php e cole o código abaixo:</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">&lt;</span><span class="token operator">!</span> <span class="token constant">DOCTYPE</span> html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>html<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>cabeça<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>title<span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span> title<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>link href <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;https://stackpath.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css&quot;</span> rel <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;folha de estilo&quot;</span> <span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>script src <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.16/vue.min.js&quot;</span> <span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span> script<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>script src <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js&quot;</span> <span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token operator">/</span> script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span> head<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;container&quot;</span> <span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;row&quot;</span> <span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span>div classe <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;col-sm-8 col-sm-offset-2&quot;</span> <span class="token operator">&gt;</span>
           <span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;painel panel-default&quot;</span> <span class="token operator">&gt;</span>
               <span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;panel-heading&quot;</span> <span class="token operator">&gt;</span> Validação simples de formulários Vuejs com o Laravel <span class="token operator">-</span> ItSolutionStuff<span class="token operator">.</span>com <span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
               <span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;panel-body&quot;</span> id <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;app&quot;</span> <span class="token operator">&gt;</span>
                       <span class="token operator">&lt;</span>form method <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;POST&quot;</span> action <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;/ vuejs / form&quot;</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;forma-horizontal&quot;</span> @ submit<span class="token operator">.</span>prevent <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;onSubmit&quot;</span> <span class="token operator">&gt;</span>
                       <span class="token punctuation">{</span> <span class="token punctuation">{</span> <span class="token function">csrf_field</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
                           <span class="token operator">&lt;</span>div<span class="token punctuation">:</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;[&#39;form-group&#39;, allerros.name? &#39;tem um erro&#39;: &#39;&#39;]&quot;</span> <span class="token operator">&gt;</span>
                               <span class="token operator">&lt;</span>label <span class="token keyword">for</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;nome&quot;</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;col-sm-4 control-label&quot;</span> <span class="token operator">&gt;</span> Nome <span class="token operator">&lt;</span><span class="token operator">/</span> label<span class="token operator">&gt;</span>
                               <span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;col-sm-6&quot;</span> <span class="token operator">&gt;</span>
                                   <span class="token operator">&lt;</span>input id <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;nome&quot;</span> name <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;nome&quot;</span> valor <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;&quot;</span>   autofocus <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;autofoco&quot;</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;controle de forma&quot;</span> type <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;texto&quot;</span> v<span class="token operator">-</span>model <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;form.name&quot;</span> <span class="token operator">&gt;</span>
                                   <span class="token operator">&lt;</span>span v<span class="token operator">-</span><span class="token keyword">if</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;allerros.name&quot;</span> <span class="token punctuation">:</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;[&#39;rótulo rótulo-perigo&#39;]&quot;</span> <span class="token operator">&gt;</span> @ <span class="token punctuation">{</span> <span class="token punctuation">{</span> allerros<span class="token operator">.</span>name <span class="token punctuation">[</span> <span class="token number">0</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span> span<span class="token operator">&gt;</span>
                               <span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
                           <span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
                           <span class="token operator">&lt;</span>div<span class="token punctuation">:</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;[&#39;grupo de formulários&#39;, allerros.comments? &#39;has-error&#39;: &#39;&#39;]&quot;</span> <span class="token operator">&gt;</span>
                               <span class="token operator">&lt;</span>rótulo para <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;comentários&quot;</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;col-sm-4 control-label&quot;</span> <span class="token operator">&gt;</span> Mensagem <span class="token operator">&lt;</span><span class="token operator">/</span> label<span class="token operator">&gt;</span>
                                   <span class="token operator">&lt;</span>div <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;col-sm-6&quot;</span> <span class="token operator">&gt;</span>
                                       <span class="token operator">&lt;</span>input id <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;comments&quot;</span> name <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;comentários&quot;</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;forma-controle&quot;</span> type <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;comments&quot;</span> v<span class="token operator">-</span>model <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;form.comments&quot;</span> <span class="token operator">&gt;</span>
                                       <span class="token operator">&lt;</span>span v<span class="token operator">-</span><span class="token keyword">if</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;allerros.comments&quot;</span> <span class="token punctuation">:</span> classe <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;[&#39;label label-danger&#39;]&quot;</span> <span class="token operator">&gt;</span> @ <span class="token punctuation">{</span> <span class="token punctuation">{</span> allerros<span class="token operator">.</span>comments <span class="token punctuation">[</span> <span class="token number">0</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">&lt;</span><span class="token operator">/</span> span<span class="token operator">&gt;</span>
                                   <span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
                               <span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
                               <span class="token operator">&lt;</span>span v<span class="token operator">-</span><span class="token keyword">if</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;success&quot;</span> <span class="token punctuation">:</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;[&#39;label label-success&#39;]&quot;</span> <span class="token operator">&gt;</span> Registro enviado com sucesso<span class="token operator">!</span> <span class="token operator">&lt;</span><span class="token operator">/</span> span<span class="token operator">&gt;</span>
                               <span class="token operator">&lt;</span>tipo de botão <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;enviar&quot;</span> <span class="token keyword">class</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;btn btn-primary&quot;</span> <span class="token operator">&gt;</span>
                                   Mandar
                               <span class="token operator">&lt;</span><span class="token operator">/</span> button<span class="token operator">&gt;</span>
                       <span class="token operator">&lt;</span><span class="token operator">/</span> form<span class="token operator">&gt;</span>
               <span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
           <span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span> div<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span>script type <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;text / javascript&quot;</span> <span class="token operator">&gt;</span>
   <span class="token keyword">const</span> <span class="token constant">app</span> <span class="token operator">=</span> novo <span class="token function">Vue</span> <span class="token punctuation">(</span> <span class="token punctuation">{</span>
       el<span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;#app&#39;</span> <span class="token punctuation">,</span>
       <span class="token argument-name">data</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>
           form<span class="token punctuation">:</span> <span class="token punctuation">{</span>
               nome<span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;&#39;</span> <span class="token punctuation">,</span>
               comentários<span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;&#39;</span> <span class="token punctuation">,</span>
           <span class="token punctuation">}</span> <span class="token punctuation">,</span>
           <span class="token argument-name">allerros</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span> <span class="token punctuation">,</span>
           <span class="token argument-name">sucesso</span><span class="token punctuation">:</span> falso<span class="token punctuation">,</span>
       <span class="token punctuation">}</span> <span class="token punctuation">,</span>
       métodos<span class="token punctuation">:</span> <span class="token punctuation">{</span>
           <span class="token function">onSubmit</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span>
               dataform <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span> <span class="token punctuation">(</span> <span class="token punctuation">)</span> <span class="token punctuation">;</span>
               dataform<span class="token operator">.</span> <span class="token function">append</span> <span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;nome&#39;</span> <span class="token punctuation">,</span> this<span class="token operator">.</span>form<span class="token operator">.</span>name <span class="token punctuation">)</span> <span class="token punctuation">;</span>
               dataform<span class="token operator">.</span> <span class="token function">acrescentar</span> <span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;comentários&#39;</span> <span class="token punctuation">,</span> this<span class="token operator">.</span>form<span class="token operator">.</span>comments <span class="token punctuation">)</span> <span class="token punctuation">;</span>
               console<span class="token operator">.</span> <span class="token function">log</span> <span class="token punctuation">(</span> this<span class="token operator">.</span>form<span class="token operator">.</span>name <span class="token punctuation">)</span> <span class="token punctuation">;</span>
               axios<span class="token operator">.</span> <span class="token function">post</span> <span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;/ vuevalidation / form&#39;</span> <span class="token punctuation">,</span> dataform <span class="token punctuation">)</span> <span class="token operator">.</span> entã<span class="token function">o</span> <span class="token punctuation">(</span> resposta <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                   console<span class="token operator">.</span> <span class="token function">log</span> <span class="token punctuation">(</span> resposta <span class="token punctuation">)</span> <span class="token punctuation">;</span>
                   this<span class="token operator">.</span>allerros <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">]</span> <span class="token punctuation">;</span>
                   this<span class="token operator">.</span>form<span class="token operator">.</span>name <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span> <span class="token punctuation">;</span>
                   this<span class="token operator">.</span>form<span class="token operator">.</span>comments <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;&#39;</span> <span class="token punctuation">;</span>
                   this<span class="token operator">.</span>success <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span>
               <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span> erro <span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
                        this<span class="token operator">.</span>allerros <span class="token operator">=</span> error<span class="token operator">.</span>response<span class="token operator">.</span>data<span class="token operator">.</span>errors<span class="token punctuation">;</span>
                        isto<span class="token operator">.</span>sucesso <span class="token operator">=</span> falso<span class="token punctuation">;</span>
                   <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token punctuation">;</span>
           <span class="token punctuation">}</span>
       <span class="token punctuation">}</span>
   <span class="token punctuation">}</span> <span class="token punctuation">)</span> <span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span> script<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span> body<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span> html<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Depois de colar o código acima, execute o aplicativo no navegador preferencial e verifique a validação.</p><h2 id="plugins-de-validacao-do-vue" tabindex="-1"><a class="header-anchor" href="#plugins-de-validacao-do-vue" aria-hidden="true">#</a> Plugins de validação do Vue</h2><p>Se você não gosta de configurar a validação manualmente, existem também alguns plugins de validação de formulário VueJS pré-fabricados disponíveis no mercado que podem economizar seu tempo e facilitar várias operações.</p><p>Como existem muitos plugins de validação disponíveis, recomendo que você escolha qualquer um dos seguintes:</p><h3 id="vue-validador" tabindex="-1"><a class="header-anchor" href="#vue-validador" aria-hidden="true">#</a> Vue-validador:</h3><p>Desenvolvido por Kazuya Kawaguchi, o Vue Validator é o mais popular e é desenvolvido pelos membros principais do VueJS. Mas ainda não é compatível com o Vue 2.</p><h3 id="vue-form-generator" tabindex="-1"><a class="header-anchor" href="#vue-form-generator" aria-hidden="true">#</a> Vue-form-generator:</h3><p>Esse também é um dos ótimos plug-in da pilha de validação de formulários do VueJS, pois também cria formulários interativos junto com a validação.</p><h3 id="vee-validate" tabindex="-1"><a class="header-anchor" href="#vee-validate" aria-hidden="true">#</a> Vee-validate:</h3><p>O Vee-validate é um novo módulo para validação, mas sua compatibilidade com o Vue1 e o Vue2 o torna uma escolha muito melhor para validação até o momento. Este plugin Vue validador é muito útil para os desenvolvedores e, portanto, eu vou estar usando isso no tutorial abaixo também.</p><h2 id="vee-validate-1" tabindex="-1"><a class="header-anchor" href="#vee-validate-1" aria-hidden="true">#</a> Vee-Validate</h2><p>Este plugin de validação de formulários do VueJS é muito leve e permite validar facilmente campos de entrada. Usá-lo não exige nada extravagante, já que todo o trabalho é feito com HTML e é bastante fácil. Você só precisa especificar o tipo de validação para cada entrada, já que alterações de valor devem ocorrer com a validação. Você receberá a notificação de cada erro ocorrente no campo.</p><p>Embora a maioria das validações de tempo esteja configurada para ocorrer automaticamente, no entanto, você também pode usar a validação personalizada em locais específicos. O objeto validador é um objeto independente e não possui dependências.</p><p>Este plugin do Vue validator tem atualmente 20 regras de validação e funciona da mesma forma como a sintaxe de validação do Laravel.</p><h2 id="instalacao" tabindex="-1"><a class="header-anchor" href="#instalacao" aria-hidden="true">#</a> Instalação</h2><p>O Vee-validate está disponível apenas no NPM atualmente, mas espera-se que ele avance em breve.</p><p>Então, para obter a versão do plugin compatível do Vue 2, eu tenho que executar o seguinte comando:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> vee-validate@next <span class="token parameter variable">--save</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Então, autorizarei o Vue a usá-lo no meu JavaScript.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> VeeValidate <span class="token keyword">from</span> <span class="token string">&quot;vee-validate&quot;</span><span class="token punctuation">;</span>
Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VeeValidate<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="validacao-de-formulario-de-exemplo-basico" tabindex="-1"><a class="header-anchor" href="#validacao-de-formulario-de-exemplo-basico" aria-hidden="true">#</a> Validação de Formulário de Exemplo Básico</h2><p>Agora, para validar uma entrada, anexe a diretiva v-validate e defina regras de validação dentro do atributo data-rules.</p><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;form-group&quot;</span> <span class="token punctuation">:</span><span class="token keyword">class</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;{&#39;has-error&#39;: errors.has(&#39;email&#39;) }&quot;</span> <span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>label <span class="token keyword">class</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;control-label&quot;</span> <span class="token keyword">for</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;email&quot;</span><span class="token operator">&gt;</span>Email<span class="token operator">&lt;</span><span class="token operator">/</span>label<span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string double-quoted-string">&quot;email&quot;</span> v<span class="token operator">-</span>validate<span class="token operator">=</span><span class="token string double-quoted-string">&quot;email&quot;</span> data<span class="token operator">-</span>rules<span class="token operator">=</span><span class="token string double-quoted-string">&quot;required|email&quot;</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;form-control&quot;</span> type<span class="token operator">=</span><span class="token string double-quoted-string">&quot;email&quot;</span> placeholder<span class="token operator">=</span><span class="token string double-quoted-string">&quot;Email&quot;</span><span class="token operator">&gt;</span>
   <span class="token operator">&lt;</span>p <span class="token keyword">class</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;text-danger&quot;</span> v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string double-quoted-string">&quot;errors.has(&#39;email&#39;)&quot;</span><span class="token operator">&gt;</span><span class="token punctuation">{</span><span class="token punctuation">{</span> errors<span class="token operator">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;email&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="erros" tabindex="-1"><a class="header-anchor" href="#erros" aria-hidden="true">#</a> Erros</h2><p>Observe aqui que o objeto de erro é usado para verificar erros na entrada e notificar os desenvolvedores sobre isso. Ele é criado automaticamente pelo plug-in e você pode alterar seu nome sempre que necessário.</p><p>O objeto de erro fornece alguns métodos para renderizar erros:</p><ul><li>first (&#39;field&#39;): Obtém a primeira mensagem de erro associada a esse campo.</li><li>collect (&#39;field&#39;): busca todas as mensagens de erro associadas a esse campo.</li><li>has (&#39;field&#39;): Verifica se há algum erro associado a esse campo.</li><li>all (): obtém todas as mensagens de erro.</li><li>any (): Verifica se há algum erro.</li></ul><h2 id="conclusao" tabindex="-1"><a class="header-anchor" href="#conclusao" aria-hidden="true">#</a> Conclusão</h2><p>Portanto, neste artigo, demonstrei detalhadamente como validar dados no Laravel usando a validação do Vue. O artigo aborda dois métodos de validação de dados com o Vue, um é o processo manual e o outro é através de plugins pré-criados. Cabe a você qual delas atende às suas demandas de validação.</p><p>Se você ainda tiver mais dúvidas sobre este artigo, escreva suas dúvidas abaixo na seção de comentários.</p><h2 id="referencia" tabindex="-1"><a class="header-anchor" href="#referencia" aria-hidden="true">#</a> Referência</h2>`,60)),n("p",null,[n("a",u,[a[0]||(a[0]=s("Shahroze Nawaz")),e(o)]),a[2]||(a[2]=s(". ")),a[3]||(a[3]=n("strong",null,"Master Vue Validation in Laravel and Handle Form Requests Effectively",-1)),a[4]||(a[4]=s(". ")),n("a",d,[a[1]||(a[1]=s("https://www.cloudways.com/blog/vue-validation-laravel/")),e(o)]),a[5]||(a[5]=s(". Acesso em: 10 jul 2019."))])])}const g=t(c,[["render",k],["__file","index.html.vue"]]);export{g as default};
